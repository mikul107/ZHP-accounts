#Below script has been created to internal use in ZHP organization
#Author: Przemyslaw Mikulski
#Hufiec ZHP Grojec
#Contact: mikul107@gmail.com or przemyslaw.mikulski@zhp.net.pl
#
#Before first use open another Powershell window "as administrator" and install MSOnline module. Run command - "Install-Module -Name MSOnline"

#Logowanie
Write-Host 'Witaj w aplikacji do zakładania konto ZHP! Musisz się zalogować aby kontynuować pracę'
$mycreds = Get-Credential -Message 'Podaj dane do konta ZHP. Wymagane sa do tworzenia kont oraz wyslania meili'
$mycredsLogin = $mycreds.UserName
try
    {
    Connect-MsolService -Credential $mycreds -ErrorAction Stop
    Write-Host ''
    Write-Host 'Podane dane się zgadzają. Uruchamianie programu...'
    Start-Sleep -s 2
    }
catch 
    {
    Write-Warning "Podanego hasło lub login są nieprawidłowe. Uruchom program ponownie. Jeśli używasz programu po raz pierwszy musisz zainstalować moduł 'MSOnline'. Aby to zrobić uruchom Powershell jako administrator i wykonaj polecenie 'Install-Module -Name MSOnline' "
    Start-Sleep -s 5
    Exit
    }
# Koniec logowania
Function Menu 
{
    Clear-Host        
    Do
    {
        Clear-Host                                                                       
        Write-Host -Object 'Tworzenie konta ZHP' -ForegroundColor Yellow
        Write-Host -Object '**********************'
        Write-Host -Object '1.  Szukaj uzytkownika'
        Write-Host -Object ''
        Write-Host -Object '2.  Tworzenie konta'
        Write-Host -Object ''
        Write-Host -Object '3.  Update licencji + reset hasła + wysłanie meila'
        Write-Host -Object ''
        Write-Host -Object '4.  Reset hasła + wysłanie meila'
        Write-Host -Object ''
        Write-Host -Object 'Q.  Wyjście'
        Write-Host -Object $errout
        $Menu = Read-Host -Prompt '(0-4 lub Q aby wyjść)'
 
        switch ($Menu) 
        {
           1 
            {
                $string = Read-Host -Prompt 'Kogo szukasz?'
                Get-MsolUser -SearchString $string | Select-Object -Property FirstName, LastName, DisplayName, UserPrincipalName, Licenses, Office, Department, WhenCreated, LastPasswordChangeTimestamp|Format-List
                pause
            }
            2 
            {
                $Name = Read-Host -Prompt 'Imie'
                $Surname = Read-Host -Prompt 'Nazwisko'
                $mail = Read-Host -Prompt 'Adres e-mail'
                $MalyMail = $mail.ToLower()
                $Hufiec = Read-Host -Prompt 'Hufiec'
                $DuzyHufiec = $Hufiec.ToUpper()
                $NrJednostki = Read-Host -Prompt 'Nr. jednostki'
                $privateMail = Read-Host -Prompt 'Podaj prywatny adres e-mail uzytkownika, na ktory ma zostac wyslane haslo'
                try
                {
                $a = New-MsolUser -UserPrincipalName $MalyMail -DisplayName "$Name $Surname" -FirstName $Name -LastName $Surname -LicenseAssignment "gkzhp:STANDARDWOFFPACK","gkzhp:FLOW_FREE","gkzhp:POWER_BI_STANDARD" -Department $NrJednostki -Office $DuzyHufiec -ForceChangePassword $true -PreferredLanguage "pl-PL" -PasswordNeverExpires $false -StrongPasswordRequired $true -UsageLocation PL -ErrorAction Stop
                Write-Host 'Super! Udało się stworzyć konto. Poniżej znajdziesz dane utworzonego konta. Możesz sprawdzić czy wszystko się zgadza.' -ForegroundColor Green
                Get-MsolUser -SearchString $MalyMail | Select-Object -Property FirstName, LastName, DisplayName, UserPrincipalName, Licenses, Office, Department, WhenCreated, LastPasswordChangeTimestamp|Format-List
                }
                catch
                {
                Write-Warning "Cos poszlo nie tak podczas tworzenia konta. Prawdopodobnie został źle podany adres e-mail ($mail) lub wystąpił problem z przypisaniem licencji. "
                Get-MsolUser -SearchString $MalyMail | Select-Object -Property FirstName, LastName, DisplayName, UserPrincipalName, Licenses, Office, Department, WhenCreated, LastPasswordChangeTimestamp|Format-List
                pause
                break
                }
                $firstUserPwd = ($a).password

                $bodyNew = "<p>Cześć,</p>
<p>Właśnie założyłem dla Ciebie konto ZHP. Możesz się do niego zalogować przez stronę https://www.office.com.</p>
<p>- adres e-mail: <strong>$MalyMail</strong></p>
<p>- hasło do pierwszego logowania: <strong>$firstUserPwd</strong></p>
<p>Od teraz masz dostęp do aplikacji takich jak Word, Excel, Forms, Outlook i innych. Wszystkie dostępne są w wersji Online przez przeglądarkę.<br />
Jeśli w przyszłości zapomnisz hasła spróbuj w pierwszej kolejności samodzielnie odzyskać hasło, przez opcje 'Nie możesz uzyskać dostępu do konta?', która dostępna jest na stronie logowania.</p>
<p>Z harcerskim pozdrowieniem,<br />
Czuwaj!<br />
Administrator ZHP</p>"

                try
                {
                Send-MailMessage -To $privateMail -from $mycredsLogin  -Subject 'ZHP - konto Office365' -smtpserver smtp.office365.com -usessl -Credential $mycreds -Encoding UTF8 -Port 587 -BodyAsHtml $bodyNew -ErrorAction Stop
                Write-host "Udalo się wysłać meila z hasłem na adres $privateMail" -ForegroundColor Green
                pause
                }
                catch
                {
                Write-Warning "Wystąpił jednak problem z wysłaniem meila z hasłem na prywatny adres $privateMail. Upewnij się czy dobrze wpisałeś adres e-mail. Możesz skorzystać z opcji 'Reset hasła + wysłanie meila' "
                pause
                }
            }
            3
            {
                $mail = Read-Host -Prompt 'Podaj adres e-mail uzytkownika w domenie ZHP'
                $privateMail = Read-Host -Prompt 'Podaj prywatny adres e-mail uzytkownika, na ktory ma zostac wyslane haslo'
                try
                {
                Set-MsolUserLicense -UserPrincipalName $mail -AddLicenses "gkzhp:STANDARDWOFFPACK", "gkzhp:FLOW_FREE", "gkzhp:POWER_BI_STANDARD" -ErrorAction SilentlyContinue
                $firstUserPwd = Set-MsolUserPassword -UserPrincipalName $mail -ForceChangePassword $true -ErrorAction Stop
                Write-Host "Super! Udało się przypisać licencje oraz zresetować hasło do konta $mail." -ForegroundColor Green
                Get-MsolUser -SearchString $mail | Select-Object -Property FirstName, LastName, DisplayName, UserPrincipalName, Licenses, Office, Department, WhenCreated, LastPasswordChangeTimestamp|Format-List
                }
                catch
                {
                Write-Warning "Coś poszlo nie tak. Prawdopodobnie został źle podany adres e-mail ($mail). Spróbuj jeszcze raz."
                pause
                break
                }

                $bodyNew = "<p>Cześć,</p>
<p>Właśnie założyłem dla Ciebie konto ZHP. Możesz się do niego zalogować przez stronę https://www.office.com.</p>
<p>- adres e-mail: <strong>$MalyMail</strong></p>
<p>- hasło do pierwszego logowania: <strong>$firstUserPwd</strong></p>
<p>Od teraz masz dostęp do aplikacji takich jak Word, Excel, Forms, Outlook i innych. Wszystkie dostępne są w wersji Online przez przeglądarkę.<br />
Jeśli w przyszłości zapomnisz hasła spróbuj w pierwszej kolejności samodzielnie odzyskać hasło, przez opcje 'Nie możesz uzyskać dostępu do konta?', która dostępna jest na stronie logowania.</p>
<p>Z harcerskim pozdrowieniem,<br />
Czuwaj!<br />
Administrator ZHP</p>"

                try
                {
                Send-MailMessage -To $privateMail -from $mycredsLogin  -Subject 'ZHP - konto Office365' -smtpserver smtp.office365.com -usessl -Credential $mycreds -Encoding UTF8 -Port 587 -BodyAsHtml $bodyNew -ErrorAction Stop
                Write-host "Udalo się wysłać meila z hasłem na adres $privateMail" -ForegroundColor Green
                pause
                }
                catch
                {
                Write-Warning "Wystąpił jednak problem z wysłaniem meila z hasłem na prywatny adres $privateMail. Upewnij się czy dobrze wpisałeś adres e-mail. Możesz skorzystać z opcji 'Reset hasła + wysłanie meila' "
                pause
                }

            }
            4 
            {
                $mail = Read-Host -Prompt 'Podaj adres e-mail uzytkownika w domenie ZHP'
                $privateMail = Read-Host -Prompt 'Podaj prywatny adres e-mail uzytkownika, na ktory ma zostac wyslane haslo'
                try
                {
                $firstUserPwd = Set-MsolUserPassword -UserPrincipalName $mail -ForceChangePassword $true -ErrorAction Stop
                Write-Host "Super! Udało się zresetować hasło do konta $mail." -ForegroundColor Green
                }
                catch
                {
                Write-Warning "Coś poszlo nie tak. Prawdopodobnie został źle podany adres e-mail ($mail). Spróbuj jeszcze raz."
                pause
                break
                }

                $bodyReset = "<p>Cześć,</p>
<p>Twoje hasło do konta ZHP właśnie zostało zresetowane. Możesz zalogować się ponownie przez stronę https://www.office.com, używając poniższych danych:</p>
<p>- adres e-mail: <strong>$mail</strong></p>
<p>- hasło do pierwszego logowania: <strong>$firstUserPwd</strong></p>
<p>Jeśli w przyszłości zapomnisz hasła spróbuj w pierwszej kolejności samodzielnie odzyskać hasło, przez opcje 'Nie możesz uzyskać dostępu do konta?', która dostępna jest na stronie logowania.</p>
<p>Z harcerskim pozdrowieniem,<br />
Czuwaj!<br />
Administrator ZHP</p>"

                try
                {
                Send-MailMessage -To $privateMail -from $mycredsLogin  -Subject 'ZHP - konto Office365' -smtpserver smtp.office365.com -usessl -Credential $mycreds -Encoding UTF8 -Port 587 -BodyAsHtml $bodyReset -ErrorAction Stop
                Write-Host ''
                Write-host "Udalo się wysłać meila z hasłem na adres $privateMail" -ForegroundColor Green
                pause
                }
                catch
                {
                Write-Warning "Wystąpił jednak problem z wysłaniem meila z hasłem na prywatny adres $privateMail. Upewnij się czy dobrze wpisałeś adres e-mail. Spróbuj jeszcze raz "
                pause
                }
            }
            Q 
            {
                Exit
            }   
            default
            {
                $errout = 'Nie ma takiego programu. Spróbuj jeszcze raz........ 0-4 lub Q aby wyjść'
            }
 
        }
    }
    until ($Menu -eq 'q')
}   
 
# Launch The Menu
Menu
